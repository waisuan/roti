plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id "org.jlleitschuh.gradle.ktlint" version '9.2.1'
    id "org.flywaydb.flyway" version "6.5.0"
}

group 'org.roti'
version '1.0'
configurations.implementation.setCanBeResolved(true)

repositories {
    mavenCentral()
    jcenter()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.postgresql:postgresql:42.2.2"
    implementation "org.jetbrains.exposed:exposed-core:0.23.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.23.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.23.1"
    implementation 'org.jetbrains.exposed:exposed-java-time:0.23.1'
    implementation 'io.javalin:javalin:3.8.0'
    implementation "org.slf4j:slf4j-simple:1.8.0-beta4"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "org.mindrot:jbcrypt:0.4"
    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.788'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.konghq:unirest-java:3.7.02'
    implementation 'com.adobe.testing:s3mock:2.1.19'
    implementation 'com.adobe.testing:s3mock-junit5:2.1.19'
    implementation 'org.webjars:vue:2.6.11'
    implementation 'org.flywaydb:flyway-core:6.5.0'
    implementation 'redis.clients:jedis:3.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.0'
    testImplementation("org.assertj:assertj-core:3.15.0")
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0")
    testImplementation('com.github.stefanbirkner:system-rules:1.17.2')
    testImplementation "io.mockk:mockk:1.10.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.implementation.collect { it.getName() }.join(' '),
                'Main-Class': 'AppKt'
        )
    }

    from { configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) } }
}

flyway {
    url = System.getenv('DB_URL')
    user = System.getenv('DB_USER')
    password = System.getenv('DB_PWD')
    baselineOnMigrate = true
}

//DISABLE tests during Heroku build.
gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

task stage(dependsOn: ['build', 'clean', 'jar'])
build.mustRunAfter clean